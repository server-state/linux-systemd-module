module.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){const n=r(1),o=r(2);function i(e){if("yes"===e||"no"===e)return"yes"===e;const t=parseFloat(e);return Number.isNaN(t)?e:t}e.exports=async function(e){if(!e||!e.length)throw new Error("No units were specified. Expected argument to be of type object[], with required member 'name' and a optional member 'addProps' both type of string.");const t={};for(const u of e){if(u.name=u.name?u.name.trim():"",!u.name)throw new Error("Missing or empty unit name. The unit name must at least contain one regular character.");let e=u.name.split(".");if(e.length<2&&(u.name=u.name+".service",e.push("service")),t[u.name])throw new Error("Unit with name '"+u.name+"' already requested.");const s={UnitType:e[1]};(await o("systemctl show "+u.name+" --property "+(r=e[1],a=u.addProps,n.PROPERTIES.any+(n.PROPERTIES[r]?","+n.PROPERTIES[r]:"")+(a?","+a:"")))).stdout.split("\n").forEach(e=>{if(e.length>0){const t=e.split("=");s[t[0]]=i(t[1])}}),t[u.name]=s}var r,a;return t}},function(e,t){e.exports=Object.freeze({PROPERTIES:{any:"LoadState,ActiveState,SubState,Description,Id,Result,UnitFileState,ActiveEnterTimestamp,ActiveEnterTimestampMonotonic",service:"CleanResult,MainPID,Type,Restart,MemoryCurrent,Nice,RemainAfterExit,TasksCurrent",mount:"Where,What,Type,LazyUnmount",slice:"TasksCurrent",automount:"Triggers",timer:"NextElapseUSecRealtime,Triggers",swap:"What",path:"Triggers"}})},function(e,t){e.exports=require("shell-exec")}]);